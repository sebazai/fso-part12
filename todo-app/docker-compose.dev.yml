services:
  todo-frontend:
    image: fs-todo-frontend-dev-cluster
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend/:/usr/src/app
    container_name: fs-todo-frontend-dev-cluster
  # debug-helper:
  #   image: busybox
  todo-backend:
    image: fs-todo-backend-dev-cluster
    depends_on:
      mongo:
        condition: service_started
        restart: true
      redis:
        condition: service_started
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    environment:
      NODE_ENV: development
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
    volumes:
      - ./todo-backend/:/usr/src/app
    container_name: fs-todo-backend-dev-cluster
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"] # Overwrite the CMD
    volumes: # Declare the volume
      - redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-cluster
    depends_on:
      - todo-frontend # wait for the frontend container to be started
      - todo-backend # wait for the backend container to be started
volumes:
  mongo_data:
  redis_data:
