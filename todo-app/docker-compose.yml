services:
  todo-frontend-prod:
    image: fs-todo-frontend-cluster-prod
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: fs-todo-frontend-cluster-prod
    environment:
      - NODE_ENV=production
  todo-backend-prod:
    image: fs-todo-backend-dev-cluster-prod
    depends_on:
      - mongo
      - redis
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
    container_name: fs-todo-backend-dev-cluster-prod
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"] # Overwrite the CMD
    volumes: # Declare the volume
      - redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-cluster-prod
    depends_on:
      - todo-frontend-prod # wait for the frontend container to be started
      - todo-backend-prod # wait for the backend container to be started
volumes:
  mongo_data:
  redis_data:
